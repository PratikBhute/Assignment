Q1. What are the major features in different versions of Spring Framework ?

Ans=
i. Lightweight
   The Spring Framework is very lightweight with respect to its size and functionality. 
   	It is due to its POJO implementation which doesn’t force to inherit any class or implement any interfaces.

ii. Aspect Oriented Programming(AOP)
	It is an important part of Spring Framework. Aspect Oriented Programming is used for separating cross-cutting concerns
	 (for example logging, security etc.) from the business logic of the application.

iii. Transaction Management
	Transaction Management use for unify several transaction management APIs and is used 
	to coordinate transactions for Java object. Also, not tie to the J2EE environment and use with containerless environments.

iv. Container The Spring Framework designs and manages the lifecycle and configurations of application objects.

v. Dependency Injection
   Dependency Injection is a feature of Spring Framework allows you to develop loosely coupled applications.
	 Therefore, the unit testing of these loosely coupled applications becomes easier.

 Features of Spring 5.0

a. JDK 8 plus 9 and Java EE 7 Baseline
b. Removal of Classes, Methods, and Packages
c. Core Container Enhancements



Q2. What is a Spring Framework?

 Ans=   Spring is a powerful lightweight Framework use for application development. 
    In a broader way, you can say that a framework is a large structure using which you can solve many technical related problems.
    Therefore, you can say that Spring Framework is a very well-defined tool which supports several web applications using Java as a programming language.

Q3 List the advantages of Spring Framework
  
	i)    Light Weight:  Spring is a lightweight framework because of its POJO implementation. ...	
       ii)    Flexible:      It provides flexible libraries trusted by developers all over the world. ...
      iii)    Loose Coupling: Spring applications are loosely coupled because of dependency injection.

Q4 What are the different features of Spring Framework?

   Ans=Main Features of Spring Framework
	IoC (Inversion of Control) Container.
	Support for aspect-oriented programing.
	Data access framework.
	Transaction management framework.
	Spring MVC framework.
	Spring web service.
	Spring test frameworks.
	Core container.

Q5. How many modules are there in Spring Framework and what are they?

	The Spring framework comprises of many modules such as
	 core, beans, context, expression language, AOP, Aspects, Instrumentation, 
	JDBC, ORM, OXM, JMS, Transaction, Web, Servlet, Struts etc.

	Test-
 	This layer provides support of testing with JUnit and TestNG.

	Spring Core Container-
	The Spring Core container contains core, beans, context and expression language (EL) modules.

	Core and Beans-
	These modules provide IOC and Dependency Injection features.
	
	Context
	This module supports internationalization (I18N), EJB, JMS, Basic Remoting.

Q6, What is a Spring configuration file?
      Spring configuration file is a file with .
      xml extension and the file contains information about the classes and interfaces and their dependencies.
       Using this file the spring container controls the life cycle of a spring bean and also Dependency Injection is achieved.

Q7. What are the different Spring boot components?
    Image result for Q7. What are the different components of a Spring application?
    Spring Boot Framework has mainly four major Components.
    Spring Boot Starters.
    Spring Boot AutoConfigurator.
    Spring Boot CLI.
    Spring Boot Actuator.

Q8. What are the various ways of using Spring Framework?
	xml-based configuration, when you describe configuration in xml file.
	java-based configuration, when configuration is Java class, marked with specific annotations.
	groovy-based configuration, when configuration is file with Groovy code.

Q9. What is Spring IOC Container?
	Spring IoC Container is the core of Spring Framework.
	 IoC means Inversion of Control (Dependency Injection).
	It creates the objects, configures and assembles their dependencies,
 	manages their entire life cycle. The Container uses Dependency Injection(DI) 
	to manage the components that make up the application.

Q10. What do you mean by Dependency Injection?

	Dependency Injection is a fundamental aspect of the Spring framework, 
	through which the Spring container “injects” objects into other objects or “dependencies”.
	 Simply put, this allows for loose coupling of components and moves the responsibility
	 of managing components onto the container

__________________________________________________________________________________________________________________________________________________________________________________________________


                                        	MULTIPAL CHOICE QUESTIONDS


Q1. What are different types of bean injection
A. constructor and setter
B. constructor and getter
C. getter and setter
D. getter setter and constructor

Ans. A. constructor and setter



Q2. Which of the following is true?
A. ApplicationContext implements BeanFactory
B. ApplicationContext extends BeanFactory
C. BeanFactory extends ApplicationContect
D. BeanFactory impliments ApplicationContext

Ans. B. ApplicationContext extends BeanFactory



Q3. What are different Autowire types..?
A. byName, byType, destructor and autodetect
B. byName, byMethod, constructor and autodetect
C. byName, byType, constructor and autocorrect
D. byName, byType, constructor and autodetect

Ans. D. byName, byType, constructor and autodetect



Q4. IOC or Dependency injection is a
A. DesignPattern
B. Framework
C. Java Module
D. ORM Framework

Ans.A. DesignPattern



Q5. Which exception class is related to all the exceptions that are thrown in spring applications?
A. ArrayIndexOutOfBound
B. DataAccessException
C. NullPointerException
D. SpringException

Ans.B. DataAccessException



Q6. Controller in Spring is....
A. a abstract class
B. concrete class
C. final class
D. an interface

Ans.D. an interface


Q7. Which of the following is not a spring module?
A. AOP
B. O/R Integration
C. Spring MVC
D. HTML/JSP

Ans. D. HTML/JSP


Q8. Bean defined in spring framewoork are default
A. Abstract
B. Singleton
C. Final
D. initialized

Ans. B. Singleton



Q9. Select the right statement about referring a Spring configuration file inside
 the package com.example.myapp in the below example?
ApplicationContect context = new ClassPathXmlApplicationContext("classpath:/com.example.myapp.confic.xml");
A. the classpath: prefix could be omit
B. Package name with dot is not wel formateed using the dot character
C. The slash character preeceding com.example could be omit
D. All of the Above


Ans. D. All of the Above



Q10. What are the main advantage of using interfaces when designing business services? 
Select answer.
A. mocking or stubbing the service
B. Be able to us the spring auto-injection
C. can do dependency checking
D. All of the above


Ans. A. mocking or stubbing the service



Q11. Given the spring configuration file, which are the correct statements?
A. The p name space has to be declared
B. Bean is is bankServiceImpl
C. The BankServiceImpl references a NationalBank ean
D. All of the Above


Ans. A. The p name space has to be declared




Q12. Given the following Spring configuration file, what is the correct answer:
A. the first declared bean MyServiceImpl is missing and id must be named myService
B. The Second declared bean JpaDao is missing an id must be named jpaDao
C. Answer 1 and 2 are both right
D. Anser 1 and 2 are both wrong


Ans. B. The Second declared bean JpaDao is missing an id must be named jpaDao



Q13 How is named the bean that is defined in following configuration class. 
Select a single answer.
@Configurationpublic class ApplicationConfig{@Autowiredprivate DataSource dataSource;@BeanClientRepository clientRepository()
{clientRepository accountRepository = new JpaClientRepository();
accountRepository.setDataSource(datasource);return accountRepository;}}
A. JpaClientRepository
B. clientRepository
C. Two beans are defined : a data source and a repository
D. All of the above


Ans. B. clientRepository



Q14 - Which of the following is correct assertion about spring?
A) - Spring enables developers to develop enterprise-class applications using POJOs.
B) - Spring is organized in a modular fashion.
C) - Testing an application written with spring is simple because environment-dependent code is moved into this framework.
D) - All of above


.Ans- D) All of the above




Q15. The concept of an endpoint in web services is much like that of a controller in web applications.
a) True
b) False
c) None of the above
d) All of the above


Ans- True



Q16. An alternative to Spring HibernateTemplate is:-
a) HibernateContext
b) Hibernate contextual sessions
c) All of the mentioned
d) None of the mentioned

Ans- 
a) HibernateContext





Q17. DAO methods must be made transactional.
a) True
b) False
c) None of the above
d) All of the above


Ans- a) True





Q18. Annotation to find a transaction and then fail, complaining that no Hibernate session been bound to the thread.
a) @Transaction
b) @Transactional
c) @Transactions
d) None of the mentioned


Ans- b) @Transactional




Q19. Class used to have full access to the Spring context’s life cycle machinery and dependency injection.
A. DelegatingFilterProxy
B. WebApplicationContextUtils.getRequiredWeb()
C. WebApplicationUtils.getRequiredWebApplicationContext()
D. None of the mentioned


Ans- A. DelegatingFilterProxy




Q20. What is Front controller pattern in spring?
(A) Dispatcher servlet
(B) Web.xml
(C) Spring.xml
(D) Controller.java Any Spring controller used in MVC


Ans- (A) Dispatcher servlet

